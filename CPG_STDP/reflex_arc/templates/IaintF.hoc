begintemplate IaF
public soma, axon, dend, presyn, connect2target

create soma, axon, dend[1] 
objectvar presyn      

public synlistinh, synlistaff, synlistip, synlistrc
objref synlistinh, synlistaff, synlistip, synlistrc
objref syninh_ 
objref synaff_
objref synip_
objref synrc_



proc init() {local i, j

    ndend = 10
    nsyn = 10
    
    soma_diam = 10    
    soma_len = 10      
    soma_nseg = 1
    soma_cm = 2
    soma_Ra = 200     

    axon_diam = 2      
    axon_len = 150 + $1*0.5     
    axon_nseg = 50 
    axon_cm = 2
    axon_Ra = 0.002        

    dend_diam = 1      
    dend_len = 40     
    dend_nseg = 1
    dend_cm = 2
    dend_Ra = 200          

    create soma, axon, dend[ndend] 

    synlistinh = new List()
    synlistaff = new List()
    synlistip = new List()
    synlistrc = new List()


    soma {
        nseg = soma_nseg    
        diam = soma_diam    
        L = soma_len 
        cm = soma_cm
        Ra = soma_Ra
        insert hh
        gnabar_hh=0.25
        gl_hh = .0001666
        el_hh = -60.0

        pt3dclear()
        pt3dadd(280,250,$1*5,soma_diam) 
        pt3dadd(280-soma_len,250,$1*5,soma_diam) 
    }

    axon {
        nseg = axon_nseg    
        diam = axon_diam    
        L = axon_len 
        cm = axon_cm
        Ra = axon_Ra       

        insert hh

        pt3dclear()     
        pt3dadd(280,250,$1*5,axon_diam) 
        pt3dadd(280-soma_len-axon_len,250,$1*5,axon_diam) 

    }

        presyn = new GABAA_S(0.5) 


    for i = 0, ndend-1{
        dend[i] {
            nseg = dend_nseg    
            diam = dend_diam    
            L = dend_len        
            pt3dclear()     
            pt3dadd(280+dend_len*i,250,$1*5,diam)
            pt3dadd(280+dend_len*(i+1),250,$1*5,diam)
        }

        for j = 0, nsyn-1{
            dend[i] synaff_ = new ExpSyn(0.5)  synlistaff.append(synaff_) /* E */
            synaff_.tau = 0.5
            synaff_.e=0
            dend[i] synip_ = new ExpSyn(0.5)  synlistip.append(synip_) /* IP */
            synip_.tau = 0.5
            synip_.e=0
            dend[i] syninh_ = new Exp2Syn(0.5) synlistinh.append(syninh_)
            syninh_.e = -75
            syninh_.tau1 = 1.5
            syninh_.tau2 = 2
            dend[i] synrc_ = new  Exp2Syn(0.5)   synlistrc.append(synrc_)
            synrc_.e = -75
            synrc_.tau1 = 1.5
            synrc_.tau2 = 2
        }

    }

    connect axon(0), soma(1)    
    connect dend[0](0), soma(1)
    for i = 1, ndend-1 connect dend[i](0), dend[i-1](1)
}

obfunc connect2target() { localobj nc //$o1 target point process, optional $o2 returned NetCon
  soma nc = new NetCon(&v(1), $o1)
  nc.threshold = 10
  if (numarg() == 2) { $o2 = nc } // for backward compatibility
  return nc
}

endtemplate IaF

